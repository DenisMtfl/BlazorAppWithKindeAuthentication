/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Kinde.ManagementApi.Client;
using Kinde.ManagementApi.Api;
// uncomment below to import models
//using Kinde.ManagementApi.Model;

namespace Kinde.ManagementApi.Test.Api
{
    /// <summary>
    ///  Class for testing APIsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class APIsApiTests : IDisposable
    {
        private APIsApi instance;

        public APIsApiTests()
        {
            instance = new APIsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of APIsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' APIsApi
            //Assert.IsType<APIsApi>(instance);
        }

        /// <summary>
        /// Test AddAPIs
        /// </summary>
        [Fact]
        public void AddAPIsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddAPIsRequest addAPIsRequest = null;
            //var response = instance.AddAPIs(addAPIsRequest);
            //Assert.IsType<SuccessResponse>(response);
        }

        /// <summary>
        /// Test DeleteAPI
        /// </summary>
        [Fact]
        public void DeleteAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiId = null;
            //var response = instance.DeleteAPI(apiId);
            //Assert.IsType<SuccessResponse>(response);
        }

        /// <summary>
        /// Test GetAPI
        /// </summary>
        [Fact]
        public void GetAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiId = null;
            //var response = instance.GetAPI(apiId);
            //Assert.IsType<Api>(response);
        }

        /// <summary>
        /// Test GetAPIs
        /// </summary>
        [Fact]
        public void GetAPIsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAPIs();
            //Assert.IsType<Apis>(response);
        }

        /// <summary>
        /// Test UpdateAPIApplications
        /// </summary>
        [Fact]
        public void UpdateAPIApplicationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiId = null;
            //UpdateAPIApplicationsRequest updateAPIApplicationsRequest = null;
            //var response = instance.UpdateAPIApplications(apiId, updateAPIApplicationsRequest);
            //Assert.IsType<SuccessResponse>(response);
        }
    }
}
